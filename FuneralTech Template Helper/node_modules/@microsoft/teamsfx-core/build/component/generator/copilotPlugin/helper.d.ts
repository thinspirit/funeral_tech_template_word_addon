/**
 * @author yuqzho@microsoft.com
 */
import { Context, FxError, OpenAIPluginManifest, Result } from "@microsoft/teamsfx-api";
import { ErrorType as ApiSpecErrorType } from "../../../common/spec-parser/interfaces";
declare enum OpenAIPluginManifestErrorType {
    AuthNotSupported = 0,
    ApiUrlMissing = 1
}
export interface ErrorResult {
    /**
     * The type of error.
     */
    type: ApiSpecErrorType | OpenAIPluginManifestErrorType;
    /**
     * The content of the error.
     */
    content: string;
}
export declare class OpenAIPluginManifestHelper {
    static loadOpenAIPluginManifest(domain: string): Promise<OpenAIPluginManifest>;
    static updateManifest(openAiPluginManifest: OpenAIPluginManifest, appPackageFolder: string): Promise<Result<undefined, FxError>>;
}
export declare function listOperations(context: Context, manifest: OpenAIPluginManifest | undefined, apiSpecUrl: string | undefined, shouldLogWarning?: boolean): Promise<Result<string[], ErrorResult[]>>;
export {};
//# sourceMappingURL=helper.d.ts.map
"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.questions = exports.questionNodes = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const create_1 = require("./create");
const other_1 = require("./other");
tslib_1.__exportStar(require("./questionNames"), exports);
tslib_1.__exportStar(require("./create"), exports);
class QuestionNodes {
    createProject() {
        return create_1.createProjectQuestionNode();
    }
    createProjectCliHelp() {
        return create_1.createProjectCliHelpNode();
    }
    addWebpart() {
        return other_1.addWebPartQuestionNode();
    }
    selectTeamsAppManifest() {
        return other_1.selectTeamsAppManifestQuestionNode();
    }
    selectTeamsAppValidationMethod() {
        return other_1.selectTeamsAppValidationMethodQuestionNode();
    }
    selectTeamsAppPackage() {
        return other_1.selectTeamsAppPackageQuestionNode();
    }
    previewWithTeamsAppManifest() {
        return other_1.previewWithTeamsAppManifestQuestionNode();
    }
    listCollaborator() {
        return other_1.listCollaboratorQuestionNode();
    }
    grantPermission() {
        return other_1.grantPermissionQuestionNode();
    }
    deployAadManifest() {
        return other_1.deployAadManifestQuestionNode();
    }
    createNewEnv() {
        return other_1.createNewEnvQuestionNode();
    }
    copilotPluginAddAPI() {
        return other_1.copilotPluginAddAPIQuestionNode();
    }
}
exports.questionNodes = new QuestionNodes();
class Questions {
    createProject() {
        return teamsfx_api_1.ok(exports.questionNodes.createProject());
    }
    createProjectCliHelp() {
        return teamsfx_api_1.ok(exports.questionNodes.createProjectCliHelp());
    }
    addWebpart() {
        return teamsfx_api_1.ok(exports.questionNodes.addWebpart());
    }
    selectTeamsAppManifest() {
        return teamsfx_api_1.ok(exports.questionNodes.selectTeamsAppManifest());
    }
    selectTeamsAppValidationMethod() {
        return teamsfx_api_1.ok(exports.questionNodes.selectTeamsAppValidationMethod());
    }
    selectTeamsAppPackage() {
        return teamsfx_api_1.ok(exports.questionNodes.selectTeamsAppPackage());
    }
    previewWithTeamsAppManifest() {
        return teamsfx_api_1.ok(exports.questionNodes.previewWithTeamsAppManifest());
    }
    copilotPluginAddAPI() {
        return teamsfx_api_1.ok(exports.questionNodes.copilotPluginAddAPI());
    }
    listCollaborator() {
        return teamsfx_api_1.ok(exports.questionNodes.listCollaborator());
    }
    grantPermission() {
        return teamsfx_api_1.ok(exports.questionNodes.grantPermission());
    }
    deployAadManifest() {
        return teamsfx_api_1.ok(exports.questionNodes.deployAadManifest());
    }
    createNewEnv() {
        return teamsfx_api_1.ok(exports.questionNodes.createNewEnv());
    }
}
exports.questions = new Questions();
//# sourceMappingURL=index.js.map
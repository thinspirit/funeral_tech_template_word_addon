import { ValidateResult } from "./interfaces";
/**
 * A class that parses an OpenAPI specification file and provides methods to validate, list, and generate artifacts.
 */
export declare class SpecParser {
    private specPath;
    private apiMap;
    private spec;
    /**
     * Creates a new instance of the SpecParser class.
     * @param path The URL or file path of the OpenAPI specification file. The OpenAPI specification file must have a version of 3.0 or higher.
     */
    constructor(path: string);
    /**
     * Validates the OpenAPI specification file and returns a validation result.
     *
     * @returns A validation result object that contains information about any errors or warnings in the specification file.
     */
    validate(): Promise<ValidateResult>;
    /**
     * Lists all the OpenAPI operations in the specification file.
     * @returns A string array that represents the HTTP method and path of each operation, such as ['GET /pets/{petId}', 'GET /user/{userId}']
     * according to copilot plugin spec, only list get and post method without auth
     */
    list(): Promise<string[]>;
    /**
     * Generates and update artifacts from the OpenAPI specification file. Generate Adaptive Cards, update Teams app manifest, and generate a new OpenAPI specification file.
     * @param manifestPath A file path of the Teams app manifest file to update.
     * @param filter An array of strings that represent the filters to apply when generating the artifacts. If filter is empty, it would process nothing.
     * @param specPath An optional file path of the new OpenAPI specification file to generate. If not specified or empty, no spec file will be generated.
     * @param adaptiveCardFolder An optional folder path where the Adaptive Card files will be generated. If not specified or empty, Adaptive Card files will not be generated.
     */
    generate(manifestPath: string, filter: string[], specPath?: string, adaptiveCardFolder?: string, signal?: AbortSignal): Promise<void>;
    private getAllSupportedApi;
}
//# sourceMappingURL=specParser.d.ts.map
{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t41: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","\n// Initialize when Office is ready\nOffice.onReady(function(info) {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"loadFieldsButton\").addEventListener(\"click\", readFile);\n    document.getElementById(\"searchInput\").addEventListener(\"input\", filterFields);\n    document.body.addEventListener(\"click\", function() {\n      const existingMenu = document.querySelector(\".menu\");\n      if (existingMenu) existingMenu.remove();\n    });\n    document.getElementById(\"fieldList\").addEventListener(\"click\", showMenu);\n  }\n});\n\n// Function to read the file and populate the field list\nfunction readFile() {\n  const fileInput = document.getElementById(\"fileInput\");\n  const file = fileInput.files[0];\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const content = e.target.result;\n      if (file.name.endsWith('.csv')) {\n        Papa.parse(content, {\n          complete: function(results) {\n            const fields = results.data.map(row => row[0]);\n            populateFields(fields);\n          }\n        });\n      }\n    };\n    reader.readAsText(file);\n  }\n}\n\n// Function to populate the field list\nfunction populateFields(fields) {\n  const fieldList = document.getElementById(\"fieldList\");\n  fieldList.innerHTML = \"\";\n  fields.forEach(field => {\n    const listItem = document.createElement(\"div\");\n    listItem.textContent = field;\n    listItem.className = \"fieldItem\";\n    fieldList.appendChild(listItem);\n  });\n}\n\n// Function to filter the field list based on search input\nfunction filterFields() {\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\n  const fieldItems = document.querySelectorAll(\".fieldItem\");\n  fieldItems.forEach(item => {\n    if (item.textContent.toLowerCase().includes(searchInput)) {\n      item.style.display = \"block\";\n    } else {\n      item.style.display = \"none\";\n    }\n  });\n}\n\n// Function to show the menu\nfunction showMenu(event) {\n  event.stopPropagation();\n  const existingMenu = document.querySelector(\".menu\");\n  if (existingMenu) existingMenu.remove();\n  const menu = document.getElementById(\"menuTemplate\").cloneNode(true);\n  menu.style.display = \"block\";\n  menu.className = \"menu\";\n  const originalFieldName = event.target.closest('.fieldItem').textContent.trim();\n  menu.querySelectorAll(\".menuOption\").forEach(option => {\n    option.addEventListener(\"click\", function(e) {\n      e.stopPropagation();\n      const type = e.target.getAttribute(\"data-type\");\n      insertAdvancedField(originalFieldName, type);\n      menu.remove();\n    });\n  });\n  event.target.appendChild(menu);\n}\n\n// Function to insert advanced merge fields\nfunction insertAdvancedField(fieldName, type) {\n\n  Word.run(function(context) {\n    const range = context.document.getSelection();\n    context.load(range);\n\n    return context.sync().then(function() {\n      let ooxml = \"\";\n\n      switch (type) {\n        case \"fullText\":\n          ooxml = generateFullTextOoxml(fieldName);\n          break;\n        case \"firstLetter\":\n          ooxml = generateFirstLetterOoxml(fieldName);\n          break;\n        case \"booleanCheckbox\":\n          ooxml = generateBooleanCheckboxOoxml(fieldName);\n          break;\n        default:\n          return;\n      }\n\n      range.insertOoxml(ooxml, Word.InsertLocation.end);\n      return context.sync();\n    });\n  });\n}\n\n// Function to generate OOXML for Full Text\nfunction generateFullTextOoxml(fieldName) {\n  let ooxml = `<pkg:package xmlns:pkg=\"http://schemas.microsoft.com/office/2006/xmlPackage\">\n  <pkg:part pkg:name=\"/_rels/.rels\" pkg:contentType=\"application/vnd.openxmlformats-package.relationships+xml\" pkg:padding=\"512\">\n    <pkg:xmlData>\n      <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n        <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"word/document.xml\"/>\n      </Relationships>\n    </pkg:xmlData>\n  </pkg:part>\n  <pkg:part pkg:name=\"/word/document.xml\" pkg:contentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\">\n    <pkg:xmlData>\n      <w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\n        <w:body>\n          <w:p>\n            <w:r>\n              <w:fldChar w:fldCharType=\"begin\"/>\n            </w:r>\n            <w:r>\n              <w:instrText xml:space=\"preserve\"> MERGEFIELD ${fieldName} </w:instrText>\n            </w:r>\n            <w:r>\n              <w:fldChar w:fldCharType=\"end\"/>\n            </w:r>\n          </w:p>\n        </w:body>\n      </w:document>\n    </pkg:xmlData>\n  </pkg:part>\n</pkg:package>`;\n  return ooxml;\n}\n\n// Function to generate OOXML for First Letter of Field\nfunction generateFirstLetterOoxml(fieldName) {\n  let ooxml = `<pkg:package xmlns:pkg=\"http://schemas.microsoft.com/office/2006/xmlPackage\">\n  <pkg:part pkg:name=\"/_rels/.rels\" pkg:contentType=\"application/vnd.openxmlformats-package.relationships+xml\" pkg:padding=\"512\">\n    <pkg:xmlData>\n      <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n        <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"word/document.xml\"/>\n      </Relationships>\n    </pkg:xmlData>\n  </pkg:part>\n  <pkg:part pkg:name=\"/word/document.xml\" pkg:contentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\">\n    <pkg:xmlData>\n      <w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\n        <w:body>\n          <w:p>\n            `;\n\n  // Loop through the alphabet to generate the IF conditions\n  for (let i = 65; i <= 90; i++) {\n    const letter = String.fromCharCode(i);\n\n    // IF field begin\n    ooxml += `<w:r><w:fldChar w:fldCharType=\"begin\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> IF </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"begin\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> MERGEFIELD ${fieldName} </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"end\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> = \"${letter}*\" \"${letter}\" \"\" </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"end\"/></w:r>`;\n  }\n\n  ooxml += `</w:p>\n          </w:body>\n        </w:document>\n     </pkg:xmlData>\n    </pkg:part>\n  </pkg:package>`;\n  return ooxml;\n}\n\n\n\nfunction generateBooleanCheckboxOoxml(fieldName) {\n  return `<pkg:package xmlns:pkg=\"http://schemas.microsoft.com/office/2006/xmlPackage\">\n    <pkg:part pkg:name=\"/_rels/.rels\" pkg:contentType=\"application/vnd.openxmlformats-package.relationships+xml\" pkg:padding=\"512\">\n      <pkg:xmlData>\n        <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n          <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"word/document.xml\"/>\n        </Relationships>\n      </pkg:xmlData>\n    </pkg:part>\n    <pkg:part pkg:name=\"/word/document.xml\" pkg:contentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\">\n      <pkg:xmlData>\n        <w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\n          <w:body>\n            <w:p>\n              <w:r><w:fldChar w:fldCharType=\"begin\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> IF </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"begin\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> MERGEFIELD ${fieldName} </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"end\"/></w:r>\n              <w:r><w:instrText xml:space=\"preserve\"> = \" \" \"X\" \"\" </w:instrText></w:r>\n              <w:r><w:fldChar w:fldCharType=\"end\"/></w:r>\n            </w:p>\n          </w:body>\n        </w:document>\n      </pkg:xmlData>\n    </pkg:part>\n  </pkg:package>`;\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <title>Word Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"/> </head> <body> <h1>FuneralTech Template Helper: Merge Fields</h1> <input type=\\\"file\\\" id=\\\"fileInput\\\" accept=\\\".csv\\\"/> <button id=\\\"loadFieldsButton\\\">Load Fields</button> <input type=\\\"text\\\" id=\\\"searchInput\\\" placeholder=\\\"Search fields...\\\" oninput=\\\"filterFields()\\\"/> <div id=\\\"fieldList\\\"> </div> <div id=\\\"menuTemplate\\\" style=\\\"display:none\\\"> <div class=\\\"menuOption\\\" data-type=\\\"fullText\\\">Full Text</div> <div class=\\\"menuOption\\\" data-type=\\\"firstLetter\\\">First Letter of Field</div> <div class=\\\"menuOption\\\" data-type=\\\"booleanCheckbox\\\">Boolean Checkbox</div> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","readFile","file","getElementById","files","reader","FileReader","onload","content","target","result","name","endsWith","Papa","parse","complete","results","fields","fieldList","data","map","row","innerHTML","forEach","field","listItem","createElement","textContent","className","appendChild","readAsText","filterFields","searchInput","value","toLowerCase","querySelectorAll","item","includes","style","display","showMenu","event","stopPropagation","existingMenu","querySelector","remove","menu","cloneNode","originalFieldName","closest","trim","option","addEventListener","type","getAttribute","fieldName","Word","run","context","range","getSelection","load","sync","then","ooxml","generateFullTextOoxml","letter","fromCharCode","generateFirstLetterOoxml","generateBooleanCheckboxOoxml","insertOoxml","InsertLocation","end","insertAdvancedField","Office","onReady","info","host","HostType","body","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}